{"ast":null,"code":"import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function subscribeToIterable(iterable) {\n  return function (subscriber) {\n    var iterator = iterable[Symbol_iterator]();\n\n    do {\n      var item = iterator.next();\n\n      if (item.done) {\n        subscriber.complete();\n        break;\n      }\n\n      subscriber.next(item.value);\n\n      if (subscriber.closed) {\n        break;\n      }\n    } while (true);\n\n    if (typeof iterator.return === 'function') {\n      subscriber.add(function () {\n        if (iterator.return) {\n          iterator.return();\n        }\n      });\n    }\n\n    return subscriber;\n  };\n}; //# sourceMappingURL=subscribeToIterable.js.map","map":{"version":3,"sources":["E:/Inkabots/paginaweb_inkabots/node_modules/rxjs/_esm2015/internal/util/subscribeToIterable.js"],"names":["iterator","Symbol_iterator","subscribeToIterable","iterable","subscriber","item","next","done","complete","value","closed","return","add"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,eAArB,QAA4C,oBAA5C;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD;AAAA,SAAc,UAACC,UAAD,EAAgB;AAC7D,QAAMJ,QAAQ,GAAGG,QAAQ,CAACF,eAAD,CAAR,EAAjB;;AACA,OAAG;AACC,UAAMI,IAAI,GAAGL,QAAQ,CAACM,IAAT,EAAb;;AACA,UAAID,IAAI,CAACE,IAAT,EAAe;AACXH,QAAAA,UAAU,CAACI,QAAX;AACA;AACH;;AACDJ,MAAAA,UAAU,CAACE,IAAX,CAAgBD,IAAI,CAACI,KAArB;;AACA,UAAIL,UAAU,CAACM,MAAf,EAAuB;AACnB;AACH;AACJ,KAVD,QAUS,IAVT;;AAWA,QAAI,OAAOV,QAAQ,CAACW,MAAhB,KAA2B,UAA/B,EAA2C;AACvCP,MAAAA,UAAU,CAACQ,GAAX,CAAe,YAAM;AACjB,YAAIZ,QAAQ,CAACW,MAAb,EAAqB;AACjBX,UAAAA,QAAQ,CAACW,MAAT;AACH;AACJ,OAJD;AAKH;;AACD,WAAOP,UAAP;AACH,GArBkC;AAAA,CAA5B,C,CAsBP","sourcesContent":["import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport const subscribeToIterable = (iterable) => (subscriber) => {\n    const iterator = iterable[Symbol_iterator]();\n    do {\n        const item = iterator.next();\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    if (typeof iterator.return === 'function') {\n        subscriber.add(() => {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToIterable.js.map"]},"metadata":{},"sourceType":"module"}