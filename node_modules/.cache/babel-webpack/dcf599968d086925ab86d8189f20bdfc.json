{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar noUiSlider = require(\"nouislider\");\n\nvar core_1 = require(\"@angular/core\");\n\nvar forms_1 = require(\"@angular/forms\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar DefaultFormatter = /*@__PURE__*/function () {\n  function DefaultFormatter() {}\n\n  DefaultFormatter.prototype.to = function (value) {\n    // formatting with http://stackoverflow.com/a/26463364/478584\n    return String(parseFloat(parseFloat(String(value)).toFixed(2)));\n  };\n\n  ;\n\n  DefaultFormatter.prototype.from = function (value) {\n    return parseFloat(value);\n  };\n\n  return DefaultFormatter;\n}();\n\nexports.DefaultFormatter = DefaultFormatter;\n\nvar NouisliderComponent = /*@__PURE__*/function () {\n  function NouisliderComponent(el, renderer) {\n    var _this = this;\n\n    this.el = el;\n    this.renderer = renderer;\n    this.config = {};\n    this.change = new core_1.EventEmitter(true);\n    this.update = new core_1.EventEmitter(true);\n    this.slide = new core_1.EventEmitter(true);\n    this.set = new core_1.EventEmitter(true);\n    this.start = new core_1.EventEmitter(true);\n    this.end = new core_1.EventEmitter(true);\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n\n    this.eventHandler = function (emitter, values, handle, unencoded) {\n      var v = _this.toValues(values);\n\n      var emitEvents = false;\n\n      if (_this.value === undefined) {\n        _this.value = v;\n        return;\n      }\n\n      if (Array.isArray(v) && _this.value[handle] != v[handle]) {\n        emitEvents = true;\n      }\n\n      if (!Array.isArray(v) && _this.value != v) {\n        emitEvents = true;\n      }\n\n      if (emitEvents) {\n        emitter.emit(v);\n\n        _this.onChange(v);\n      }\n\n      if (Array.isArray(v)) {\n        _this.value[handle] = v[handle];\n      } else {\n        _this.value = v;\n      }\n    };\n\n    this.defaultKeyHandler = function (e) {\n      var stepSize = _this.slider.steps();\n\n      var index = parseInt(e.target.getAttribute('data-handle'));\n      var sign = 1;\n      var multiplier = 1;\n      var step = 0;\n      var delta = 0;\n\n      switch (e.which) {\n        case 34:\n          // PageDown\n          multiplier = _this.config.pageSteps;\n\n        case 40: // ArrowDown\n\n        case 37:\n          // ArrowLeft\n          sign = -1;\n          step = stepSize[index][0];\n          e.preventDefault();\n          break;\n\n        case 33:\n          // PageUp\n          multiplier = _this.config.pageSteps;\n\n        case 38: // ArrowUp\n\n        case 39:\n          // ArrowRight\n          step = stepSize[index][1];\n          e.preventDefault();\n          break;\n\n        default:\n          break;\n      }\n\n      delta = sign * multiplier * step;\n      var newValue;\n\n      if (Array.isArray(_this.value)) {\n        newValue = [].concat(_this.value);\n        newValue[index] = newValue[index] + delta;\n      } else {\n        newValue = _this.value + delta;\n      }\n\n      _this.slider.set(newValue);\n    };\n  }\n\n  NouisliderComponent.prototype.ngOnInit = function () {\n    var _this = this;\n\n    var inputsConfig = JSON.parse(JSON.stringify({\n      behaviour: this.behaviour,\n      connect: this.connect,\n      limit: this.limit,\n      start: this.formControl !== undefined ? this.formControl.value : this.ngModel,\n      step: this.step,\n      pageSteps: this.pageSteps,\n      keyboard: this.keyboard,\n      onKeydown: this.onKeydown,\n      range: this.range || this.config.range || {\n        min: this.min,\n        max: this.max\n      },\n      tooltips: this.tooltips,\n      snap: this.snap,\n      animate: this.animate\n    }));\n    inputsConfig.tooltips = this.tooltips || this.config.tooltips;\n    inputsConfig.format = this.format || this.config.format || new DefaultFormatter();\n    this.slider = noUiSlider.create(this.el.nativeElement.querySelector('div'), Object.assign(this.config, inputsConfig));\n    this.handles = [].slice.call(this.el.nativeElement.querySelectorAll('.noUi-handle'));\n\n    if (this.config.keyboard) {\n      if (this.config.pageSteps === undefined) {\n        this.config.pageSteps = 10;\n      }\n\n      var _loop_1 = function _loop_1(handle) {\n        handle.setAttribute('tabindex', 0);\n        handle.addEventListener('click', function () {\n          handle.focus();\n        });\n\n        if (this_1.config.onKeydown === undefined) {\n          handle.addEventListener('keydown', this_1.defaultKeyHandler);\n        } else {\n          handle.addEventListener('keydown', this_1.config.onKeydown);\n        }\n      };\n\n      var this_1 = this;\n\n      for (var _i = 0, _a = this.handles; _i < _a.length; _i++) {\n        var handle = _a[_i];\n\n        _loop_1(handle);\n      }\n    }\n\n    this.slider.on('set', function (values, handle, unencoded) {\n      _this.eventHandler(_this.set, values, handle, unencoded);\n    });\n    this.slider.on('update', function (values, handle, unencoded) {\n      _this.update.emit(_this.toValues(values));\n    });\n    this.slider.on('change', function (values, handle, unencoded) {\n      _this.change.emit(_this.toValues(values));\n    });\n    this.slider.on('slide', function (values, handle, unencoded) {\n      _this.eventHandler(_this.slide, values, handle, unencoded);\n    });\n    this.slider.on('start', function (values, handle, unencoded) {\n      _this.start.emit(_this.toValues(values));\n    });\n    this.slider.on('end', function (values, handle, unencoded) {\n      _this.end.emit(_this.toValues(values));\n    });\n  };\n\n  NouisliderComponent.prototype.ngOnChanges = function (changes) {\n    var _this = this;\n\n    if (this.slider && (changes.min || changes.max || changes.step || changes.range)) {\n      setTimeout(function () {\n        _this.slider.updateOptions({\n          range: Object.assign({}, {\n            min: _this.min,\n            max: _this.max\n          }, _this.range || {}),\n          step: _this.step\n        });\n      });\n    }\n  };\n\n  NouisliderComponent.prototype.toValues = function (values) {\n    var v = values.map(this.config.format.from);\n    return v.length == 1 ? v[0] : v;\n  };\n\n  NouisliderComponent.prototype.writeValue = function (value) {\n    var _this = this;\n\n    if (this.slider) {\n      setTimeout(function () {\n        _this.slider.set(value);\n      });\n    }\n  };\n\n  NouisliderComponent.prototype.registerOnChange = function (fn) {\n    this.onChange = fn;\n  };\n\n  NouisliderComponent.prototype.registerOnTouched = function (fn) {\n    this.onTouched = fn;\n  };\n\n  NouisliderComponent.prototype.setDisabledState = function (isDisabled) {\n    isDisabled ? this.renderer.setAttribute(this.el.nativeElement.childNodes[0], 'disabled', 'true') : this.renderer.removeAttribute(this.el.nativeElement.childNodes[0], 'disabled');\n  };\n\n  NouisliderComponent.propDecorators = {\n    'disabled': [{\n      type: core_1.Input\n    }],\n    'behaviour': [{\n      type: core_1.Input\n    }],\n    'connect': [{\n      type: core_1.Input\n    }],\n    'limit': [{\n      type: core_1.Input\n    }],\n    'min': [{\n      type: core_1.Input\n    }],\n    'max': [{\n      type: core_1.Input\n    }],\n    'snap': [{\n      type: core_1.Input\n    }],\n    'animate': [{\n      type: core_1.Input\n    }],\n    'range': [{\n      type: core_1.Input\n    }],\n    'step': [{\n      type: core_1.Input\n    }],\n    'format': [{\n      type: core_1.Input\n    }],\n    'pageSteps': [{\n      type: core_1.Input\n    }],\n    'config': [{\n      type: core_1.Input\n    }],\n    'ngModel': [{\n      type: core_1.Input\n    }],\n    'keyboard': [{\n      type: core_1.Input\n    }],\n    'onKeydown': [{\n      type: core_1.Input\n    }],\n    'formControl': [{\n      type: core_1.Input\n    }],\n    'tooltips': [{\n      type: core_1.Input\n    }],\n    'change': [{\n      type: core_1.Output\n    }],\n    'update': [{\n      type: core_1.Output\n    }],\n    'slide': [{\n      type: core_1.Output\n    }],\n    'set': [{\n      type: core_1.Output\n    }],\n    'start': [{\n      type: core_1.Output\n    }],\n    'end': [{\n      type: core_1.Output\n    }]\n  };\n\n  NouisliderComponent.ɵfac = function NouisliderComponent_Factory(t) {\n    return new (t || NouisliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  NouisliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: NouisliderComponent,\n    selectors: [[\"nouislider\"]],\n    hostVars: 2,\n    hostBindings: function NouisliderComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng2-nouislider\", true);\n      }\n    },\n    inputs: {\n      config: \"config\",\n      disabled: \"disabled\",\n      behaviour: \"behaviour\",\n      connect: \"connect\",\n      limit: \"limit\",\n      min: \"min\",\n      max: \"max\",\n      snap: \"snap\",\n      animate: \"animate\",\n      range: \"range\",\n      step: \"step\",\n      format: \"format\",\n      pageSteps: \"pageSteps\",\n      ngModel: \"ngModel\",\n      keyboard: \"keyboard\",\n      onKeydown: \"onKeydown\",\n      formControl: \"formControl\",\n      tooltips: \"tooltips\"\n    },\n    outputs: {\n      change: \"change\",\n      update: \"update\",\n      slide: \"slide\",\n      set: \"set\",\n      start: \"start\",\n      end: \"end\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: forms_1.NG_VALUE_ACCESSOR,\n      useExisting: core_1.forwardRef(function () {\n        return NouisliderComponent;\n      }),\n      multi: true\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    template: function NouisliderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled ? true : undefined);\n      }\n    },\n    styles: [\"[_nghost-%COMP%] {\\n      display: block;\\n      margin-top: 1rem;\\n      margin-bottom: 1rem;\\n    }\"]\n  });\n  return NouisliderComponent;\n}();\n\nexports.NouisliderComponent = NouisliderComponent;\n\nvar NouisliderModule = /*@__PURE__*/function () {\n  function NouisliderModule() {}\n\n  NouisliderModule.ɵfac = function NouisliderModule_Factory(t) {\n    return new (t || NouisliderModule)();\n  };\n\n  NouisliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: NouisliderModule\n  });\n  NouisliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NouisliderModule, {\n      declarations: [NouisliderComponent],\n      exports: [NouisliderComponent]\n    });\n  })();\n\n  return NouisliderModule;\n}();\n\nexports.NouisliderModule = NouisliderModule;","map":null,"metadata":{},"sourceType":"script"}